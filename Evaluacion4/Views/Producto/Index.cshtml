@model IEnumerable<Evaluacion4.Models.Entidad.Producto>
@inject IAuthorizationService AuthorizationService //Importa cosas para poder usar la verficacion de roles en base al usuario logueado en .net//
@using X.PagedList;
@using X.PagedList.Mvc.Core;

@* Para controlar funciones en base a roles de usuario: *@
@if ((await AuthorizationService.AuthorizeAsync(User, "AllowLayoutAdministrador")).Succeeded)
{
    <a style="margin-bottom:10px" class="btn btn-success btn-sm" asp-controller="Producto" asp-action="Create"
       role="button"><i class="fa fa-plus" aria-hidden="true"></i> Nuevo</a>
}

@* Usamos un formulario para realizar una peticion get al servidor (aunque no estrictamente necesario): *@
<form id="frmBuscar" asp-action="Index" method="get">
    <div class="row" style="margin-left:30px;">
        <div class="col-2">
            <select name="Categoria" class="form-control custom-select-sm">
                <option value="0">Categoria</option>
                @foreach (var date in TempData["Categoria"] as IList<Evaluacion4.Models.Entidad.Categoria>)
                {
                    <option value=@date.IdCategoria>@date.NombreCategoria</option>
                }
            </select>
        </div>
        <div class="col-5">
            <button type="submit" class="btn btn-primary btn-sm">
                <i class="fa fa-filter" aria-hidden="true"></i>
                Filtro
            </button>
            <button type="submit" class="btn btn-primary btn-sm">
                <i class="fa fa-refresh" aria-hidden="true"></i>
                Limpiar
            </button>
        </div>
        <div class="col-5">
        </div>
    </div>
    <div class="container">
        <div class="row justify-content-start">
            @foreach (var item in Model)
            {
                <div class="card shadow-lg col-l p-3 mb-3 contenedor-imagenes"
                     style="margin:15px; border-radius: 10px 10px 10px 10px">

                    <ul class="navbar-nav">
                        <li class="nav-item">
                            <a asp-controller="Producto" asp-action="Detail" asp-route-id="@item.IdProducto">
                                <i class="fas fa-info-circle" style="width: 20px; height: 20px; font-size: 20px;"></i>
                            </a>

                            @if ((await AuthorizationService.AuthorizeAsync(User, "AllowLayoutAdministrador")).Succeeded)
                            {
                                <a style="float:right; color:black; margin-left:8px" asp-controller="Producto" asp-action="Edit"
                                   asp-route-id="@item.IdProducto" role="button">
                                    <i class="fas fa-edit"
                                       arial-hidden="true"></i>
                                </a>
                                <a style="float:right; color:black" asp-controller="Producto" asp-action="Delete"
                                   asp-route-id="@item.IdProducto" role="button">
                                    <i class="fas fa-trash"
                                       arial-hidden="true"></i>
                                </a>
                            }
                        </li>
                    </ul>


                    @if (string.IsNullOrEmpty(item.Imagen))
                    {
                        <img src="~/imagen/producto/nodisponible.jpg" alt="No disponible" />
                    }
                    else
                    {
                        @* <a asp-controller="Producto" asp-action="Detail" asp-route-id="@item.IdProducto"> *@
                        <img src="~/@item.Imagen" alt="No disponible" />
                        @* </a> *@
                    }
                    <div class="separador"></div>
                    <div class="card-body">
                        <h5 class="card-title" style="width: 270px">@item.Nombre</h5>
                        <p class="card-text texto" style="width: 270px; height:150px">@item.Descripcion</p>
                        <p class="card-text contenedor-informacion_Productos">
                            <small class="text-muted">
                                <i class="fas fa-dollar-sign" style="font-size: 1.5em">@item.Precio.00</i>
                            </small>
                            @if ((await AuthorizationService.AuthorizeAsync(User,
                          "AllowLayoutAdministrador")).Succeeded)
                            {
                                @* <a class="btn btn-success btn-sm" style="float:right; display:none;"
                                    asp-controller="Producto" asp-action="carrito" asp-route-id="@item.IdProducto"
                                    role="button"><i class="fas fa-shopping-cart"></i>Añadir al Carrito</a> *@
                            }
                            else
                            {
                                <a class="btn btn-success btn-sm" style="float:right" asp-controller="Producto"
                                   asp-action="carrito" asp-route-id="@item.IdProducto" role="button">
                                    <i class="fas fa-shopping-cart"></i>Añadir al Carrito
                                </a>
                            }
                        </p>
                    </div>
                </div>
            }
        </div>
    </div>
    <div>
        <h6>
            @Html.PagedListPager((IPagedList)Model,
            page => Url.Action("Index", "Producto", new { page = page }),
            X.PagedList.Web.Common.PagedListRenderOptions.MinimalWithPageCountText)
        </h6>
    </div>
</form>
